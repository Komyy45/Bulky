@using Bulky.Core.Entities
@model IEnumerable<CategoryDto>

@{
	ViewData["Title"] = "Categories";
}

<partial name="_Toaster" />

<div class="row py-3">
	<div class="col-md-6">
		<h1>Categories</h1>
	</div>
	<div class="col-md-6 text-end">
		<a asp-controller="Category" asp-action="Create" class="btn btn-primary">Create Category</a>
	</div>
</div>

<div class="row p-3 text-center">
	<table class="table table-primary table-striped">
		<thead>
		<tr>
			<th>Id</th>
			<th>Name</th>
			<th>Actions</th>
		</tr>
		</thead>
		<tbody class="overflow-y-scroll">
		@foreach(var category in Model)
		{
			<tr>
				<td>@category.Id</td>
				<td>@category.Name</td>
				<td class="d-flex gap-2 justify-content-center">
						<button type="button" class="btn btn-primary rounded" onclick="editCategory(@category.Id, '@category.Name')">Update</button>
						<button type="button" class="btn btn-danger rounded" onclick="confirmDelete(@category.Id)">Delete</button>
				</td>
			</tr>
		}
		</tbody>
	</table>
</div>

@section Scripts
{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script type="text/javascript">
		
	function editCategory(id, currentName) {
    	Swal.fire({
    		title: 'Edit Category',
    		input: 'text',
    		inputLabel: 'Category Name',
    		inputValue: currentName,
    		showCancelButton: true,
    		confirmButtonText: 'Update',
    		inputValidator: (value) => {
    			if (!value) {
    				return 'You need to write a category name!';
    			}
    		}
    	}).then(result => {
    		if (result.isConfirmed) {
    			const name = result.value;
    			fetch(`/Category/Edit`, {
    				method: 'POST',
    				headers: {
    					'Content-Type': 'application/json'
    				},
    				body: JSON.stringify({ id, name })
    			}).then(res =>  location.reload() )
		}
			});
	}
		function confirmDelete(id) {
        			  Swal.fire({
                            title: "Are you sure?",
                            text: "You won't be able to revert this!",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes, delete it!"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                fetch(`/Category/Delete/${id}`, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    }
                                })
                                .then(response => {
                                    location.reload();
                                });
        		}});
					  }
	</script>
	}

