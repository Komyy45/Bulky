@using Microsoft.AspNetCore.Identity
@model RegisterViewModel
@inject RoleManager<IdentityRole> roleManager;
@{
    ViewData["Title"] = "Register";
    var rolesSelectList = roleManager.Roles.Select(r => new SelectListItem(r.Name, r.Name, r.Name == "Customer"));
}

<h2>Register</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelState in ViewData.ModelState.Values)
            {
                foreach (var error in modelState.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<form asp-action="Register">
    <div class="form-group">
        <label asp-for="Username"></label>
        <input asp-for="Username" class="form-control" />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <partial name="_AuthFieldsPartial" model="Model" />

    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <div class="col-md-6">
        <label asp-for="Role" class="form-label"></label>
        <select asp-for="Role" asp-items="rolesSelectList" class="form-select">
            <option value="" selected>Select Category</option>
        </select>
        <span asp-validation-for="Role" class="text-danger"></span>
    </div>

    <div class="my-2 d-flex justify-content-between align-items-center">
        <button type="submit" class="btn btn-success">Register</button>
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Already have an Account ?</a>
    </div>
</form>
